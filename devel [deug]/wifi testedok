//require SPI flash storage driver 
#require "SPIFlashFileSystem.class.nut:1.2.0"


//setup global variables
uart0 <- hardware.uart0;
uart2 <- hardware.uart2;
//nor type Quad spi flash
qspi <- null
// function to get data from uart 0 
function getfromUART0(){
    local state =null;
}
//function to store it in spi flash
function getfromUART0(){
    local state =null;
}


//--------------------------------------------------
//configure spiflash to store a data into flash

server.log("enabling Spi flash of 2 MB size");
// Allocate the first 2MB to the file system
sffs <- SPIFlashFileSystem(0x000000, 0x200000);
server.log("loading memories");
sffs.init(function(files) {
    // Log how many files we found
    server.log(format("Found %d files", files.len()));

    // Log all the information returned about each file:
    foreach(file in files) {
        server.log(format("  %d: %s (%d bytes)", file.id, file.fname, file.size));
    }
});

//---------------------------------------
// handle wifi connect
local netData = imp.net.info();
if ("active" in netData) {
    // We have an active network connection
    local ip = netData.ipv4.address;
    local type = netData.interface[netData.active].type;
    server.log("The imp has IP address " + ip + " and is connected via " + type);
    if (netData.interface.len() > 1) {
        // The imp has more than one possible network interface
        // so note the second, disconnected one
        local altType = "";
        if (netData.active == 0) {
            altType = netData.interface[1].type;
        } else {
            altType = netData.interface[0].type;
        }
        
        server.log("(It can also connect via " + altType + ")");
    }
} else {
    server.log("The imp is not connected");
}
